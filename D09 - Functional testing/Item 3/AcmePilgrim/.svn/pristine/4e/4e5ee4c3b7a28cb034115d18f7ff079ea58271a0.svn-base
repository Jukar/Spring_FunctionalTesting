package controllers.innkeeper;


import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.util.Assert;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.ModelAndView;

import services.LodgeService;
import services.RequestService;

import controllers.AbstractController;
import domain.Lodge;
import domain.Request;

@Controller
@RequestMapping("/request/innkeeper")
public class RequestInkeeperController extends AbstractController{
	//Services-----------------------
	@Autowired
	private RequestService requestService;
	@Autowired
	private LodgeService lodgeService;
	//Listing------------------------
	// Creation -----------------------------------------------------------
	@RequestMapping(value= "/create", method = RequestMethod.GET )
	public ModelAndView create(@RequestParam int lodgeId){
		ModelAndView result ; 
		Request request;
		
		Lodge lodge = lodgeService.findOne(lodgeId);
		
		request = requestService.create();
		
		lodge.setRequest(request);
		request.setLodge(lodge);
		
		Assert.notNull(request);
		result=createEditModelAndView(request);
		return result;
	}
	//	Save ------------------------------------------------------------
	@RequestMapping(value="/edit",method=RequestMethod.POST,params="save")		
	public ModelAndView save(@Valid Request request, BindingResult binding){
		ModelAndView result;
		
		if(binding.hasErrors()){
			result=createEditModelAndView(request);
		} else{
			try{
				requestService.save(request);
				result=new ModelAndView("redirect:lodge/list.do");
			} catch(Throwable oops){
				result=createEditModelAndView(request,"request.commit.error");
			}
		}
		return result;
	}
	//	Edition ---------------------------------------------------------------
	@RequestMapping(value = "/edit", method = RequestMethod.GET)
	public ModelAndView edit(@RequestParam int requestId){
		ModelAndView result;
		Request request;
		
		request = requestService.findOne(requestId);
		Assert.notNull(request);
		result = createEditModelAndView(request);
		
		return result;
	}

	@RequestMapping(value = "/edit", method = RequestMethod.POST, params = "delete")
	public ModelAndView delete(Request request, BindingResult binding){
		ModelAndView result;
		
		try{
			requestService.delete(request);
			result = new ModelAndView("redirect:lodge/list.do");
		}catch(Throwable oops){
			result = createEditModelAndView(request, "request.commit.error");
		}
		
		return result;
	}
	// Ancillary methods
	protected ModelAndView createEditModelAndView(Request request){
		ModelAndView result;
		result=createEditModelAndView(request,null);		
		return result;
	}
	
	protected ModelAndView createEditModelAndView(Request request, String message){
		ModelAndView result;
				
		result=new ModelAndView("request/edit");
		result.addObject("request", request);
		
		return result;
	}
}
